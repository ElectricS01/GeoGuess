// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`HeaderGame.vue > methods 1`] = `
VueWrapper {
  "_emitted": {
    "hook:beforeCreate": [
      [],
    ],
    "hook:beforeMount": [
      [],
    ],
    "hook:created": [
      [],
    ],
    "hook:mounted": [
      [],
    ],
    "hook:renderTracked": [
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
    ],
    "hook:renderTriggered": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:beforeCreate",
    },
    {
      "args": [],
      "name": "hook:created",
    },
    {
      "args": [],
      "name": "hook:beforeMount",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:mounted",
    },
    {
      "args": [],
      "name": "hook:renderTriggered",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`HeaderGame.vue > mounted 1`] = `
VueWrapper {
  "_emitted": {
    "hook:beforeCreate": [
      [],
    ],
    "hook:beforeMount": [
      [],
    ],
    "hook:created": [
      [],
    ],
    "hook:mounted": [
      [],
    ],
    "hook:renderTracked": [
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:beforeCreate",
    },
    {
      "args": [],
      "name": "hook:created",
    },
    {
      "args": [],
      "name": "hook:beforeMount",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`HeaderGame.vue methods 1`] = `
<div>
  <v-app-bar-stub color="grey darken-4" tag="header" extensionheight="48" src="" value="true" class="header-game">
    <dialogmessage-stub dismissible="true" dialogtitle="Leaderboard"></dialogmessage-stub>
    <!---->
    <div><span id="countdown-text"></span></div>
    <!---->
    <div class="flex-grow-1"></div>
    <div class="round-score-container"><span class="sub-text">ROUND: </span> <span id="roundLabel" class="main-text">
                 / 
            </span></div>
    <div class="round-score-container"><span class="sub-text">DISTANCE: </span> <span class="main-text">NaN km away</span></div>
    <div class="round-points-container"><span class="sub-text">SCORE: </span> <span class="main-text"></span></div>
  </v-app-bar-stub>
</div>
`;

exports[`HeaderGame.vue mounted 1`] = `
<div>
  <v-app-bar-stub color="grey darken-4" tag="header" extensionheight="48" src="" value="true" class="header-game">
    <dialogmessage-stub dismissible="true" dialogtitle="Leaderboard"></dialogmessage-stub>
    <!---->
    <div><span id="countdown-text">01:00</span></div>
    <!---->
    <div class="flex-grow-1"></div>
    <div class="round-score-container"><span class="sub-text">ROUND: </span> <span id="roundLabel" class="main-text">
                 / 
            </span></div>
    <div class="round-score-container"><span class="sub-text">DISTANCE: </span> <span class="main-text">NaN km away</span></div>
    <div class="round-points-container"><span class="sub-text">SCORE: </span> <span class="main-text"></span></div>
  </v-app-bar-stub>
</div>
`;
